//var snakeX = 30;
//var snakeY = 30; 
var score = 1;
var numFood = 100;
var gameOver = false;
//frameRate(1);
var foodsX = round(random(10,370));
var foodsY = round(random(5,370));
var index = 0;

var Snake = function(x, y) {
    this.x = x;
    this.y = y;
    this.segments = []; // Array to store snake segments
    this.segments.push({ x: x, y: y }); // Add the initial segment
};

Snake.prototype.draw = function() {
    fill(0, 255, 72);
    noStroke();
    for (var i = 0; i < this.segments.length; i++) {
        ellipse(this.segments[i].x, this.segments[i].y, 20, 20);
    }
};

Snake.prototype.move = function() {
    var newX = this.x;
    var newY = this.y;
    // Move the snake according to the current direction
    if (this.direction === "right") {
        this.x += 1;
    } else if (this.direction === "left") {
        this.x -= 1;
    } else if (this.direction === "up") {
        this.y -= 1;
    } else if (this.direction === "down") {
        this.y += 1;
    }
    // Add a new segment to the beginning of the segments array
    var newSegment = { x: newX, y: newY };
    this.segments.splice(0, 0, newSegment); // Insert newSegment at the beginning of the array

    // Remove the last segment if the snake didn't eat food
    if (!this.ateFood) {
    this.segments.splice(this.segments.length - 1, 1); // Remove the last segment from the array
    }
};

Snake.prototype.setDirection = function(newDirection) {
    // Set the current direction
    this.direction = newDirection;
};

var Food = function(x, y) {
    this.x = x;
    this.y = y;
};

Food.prototype.draw = function() {
    image(getImage("avatars/aqualine-seed"), this.x, this.y, 50, 50); //Replace Food image with Bitmoji
};

var foods = [];
for (var i = 0; i < numFood; i++) {  
    foods.push(new Food(round(random(10, 370)), round(random(5, 370))));
}

Snake.prototype.checkForFoodGrab = function(food) {
    var distance = dist(this.x, this.y, food.x, food.y);
    var combinedRadius = 10 + 25; //Combined Radius of both Snake and Food (Snake = 20/2 = 10) (Food = 50/2 = 25)
    if (distance < combinedRadius) {
        food.y = -400; // Moves the food off the bottom of the canvas
        score++;
        index++;
        if (score >= numFood) {
            gameOver = true; //Ends the game after 100 food is grabbed
        }
        // Set the position of the food object to a random location
        food.x = round(random(0, 400));
        food.y = round(random(0, 400));
        this.ateFood = true; // Set ateFood flag for Snake growth
    }
};

var playerSnake = new Snake(100, 100);

draw = function() {
    // static
    background(245, 12, 78);
    fill(0, 255, 26);
    text("Score:" + score, 40, 40);
    // Draw the current food object
    foods[index].draw();

    // Place new food if the game is not over
    if (!gameOver) {
        playerSnake.move();
        playerSnake.draw();
    }

    // Check for food grab
    playerSnake.checkForFoodGrab(foods[index]);
};

keyPressed = function() {
    if (keyCode === DOWN) {
        playerSnake.setDirection("down");
    } else if (keyCode === RIGHT) {
        playerSnake.setDirection("right");
    } else if (keyCode === LEFT) {
        playerSnake.setDirection("left");
    } else if (keyCode === UP) {
        playerSnake.setDirection("up");
    }
};
